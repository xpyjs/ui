@use "../vars.scss" as *;

@use "sass:map";

// 获取所有类型
$types: (
  "default": (
    "base": --x-color-neutral-200,
    "bg": --x-color-neutral,
    "text": var(--x-color-white)
  ),
  "primary": (
    "base": --x-color-primary,
    "bg": --x-color-primary,
    "text": var(--x-color-white)
  ),
  "secondary": (
    "base": --x-color-secondary,
    "bg": --x-color-secondary,
    "text": var(--x-color-white)
  ),
  "success": (
    "base": --x-color-success,
    "bg": --x-color-success,
    "text": var(--x-color-white)
  ),
  "warning": (
    "base": --x-color-warning,
    "bg": --x-color-warning,
    "text": var(--x-color-white)
  ),
  "error": (
    "base": --x-color-error,
    "bg": --x-color-error,
    "text": var(--x-color-white)
  ),
  "info": (
    "base": --x-color-info,
    "bg": --x-color-info,
    "text": var(--x-color-white)
  )
);

// 获取所有变体
$variants: ("filled", "light", "outlined", "text");

// 尺寸配置
$sizes: (
  "small": (
    "height": 32px,
    "padding": 0 12px,
    "fontSize": var(--x-font-size-small)
  ),
  "medium": (
    "height": 40px,
    "padding": 0 16px,
    "fontSize": var(--x-font-size-base)
  ),
  "large": (
    "height": 48px,
    "padding": 0 24px,
    "fontSize": var(--x-font-size-large)
  )
);

.x-button {
  // 基础样式
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  outline: none;
  cursor: pointer;
  user-select: none;
  transition: all var(--x-transition-duration) var(--x-transition-timing);
  font-family: inherit;
  text-decoration: none;
  margin: 0;
  line-height: 1.5;

  // 基础边框样式
  border: var(--x-border);
  border-radius: var(--x-border-radius-base);
  box-sizing: border-box;

  &:focus,
  &:focus-visible,
  &:focus-within {
    outline: none;
  }

  // 默认添加阴影
  box-shadow: var(--x-shadow);

  // 状态
  &--disabled {
    opacity: var(--x-opacity-disabled);
    cursor: not-allowed;
  }

  &--loading {
    cursor: wait;
  }

  // 图标
  &__icon {
    display: inline-flex;
    align-items: center;
    width: 1em;
    height: 1em;

    & + .x-button__content:not(:empty) {
      margin-left: 6px;
    }
  }

  // 内容
  &__content {
    display: inline-flex;
    align-items: center;
  }

  // 确保文本按钮永远没有阴影
  &.x-button--text {
    box-shadow: var(--x-shadow-none) !important;
    height: auto;
    padding: 0 4px !important;
    transition: color 0.1s ease-in-out;

    &:hover {
      box-shadow: var(--x-shadow-none);
    }
  }

  // 生成所有类型和变体的组合
  @each $type, $colors in $types {
    &--#{$type} {
      @each $variant in $variants {
        &.x-button--#{$variant} {
          @if $variant == "filled" {
            background-color: var(map.get($colors, "base"));
            color: map.get($colors, "text");
            border-color: transparent;
            box-shadow: var(--x-shadow);

            &:hover {
              background-color: var(#{map.get($colors, "bg")}-400);
              box-shadow: var(--x-shadow-large);
            }

            &:active {
              background-color: var(#{map.get($colors, "bg")}-600);
              box-shadow: var(--x-shadow-tiny);
            }

            @if $type == "default" {
              &:hover {
                background-color: var(#{map.get($colors, "bg")}-100);
              }

              &:active {
                background-color: var(#{map.get($colors, "bg")}-200);
              }
            }

            // 在每个变体中添加禁用状态的处理
            &.x-button--disabled,
            &.x-button--loading {
              @if $type == "default" {
                background-color: var(#{map.get($colors, "bg")}-200);
                &:hover,
                &:active {
                  background-color: var(#{map.get($colors, "bg")}-200);
                  box-shadow: var(--x-shadow);
                }
              }

              @if $type == "primary" {
                background-color: var(#{map.get($colors, "bg")}-200);
                &:hover,
                &:active {
                  background-color: var(#{map.get($colors, "bg")}-200);
                  box-shadow: var(--x-shadow);
                }
              }

              @if $type == "secondary" {
                background-color: var(#{map.get($colors, "bg")}-200);
                &:hover,
                &:active {
                  background-color: var(#{map.get($colors, "bg")}-200);
                  box-shadow: var(--x-shadow);
                }
              }

              @if $type == "success" {
                background-color: var(#{map.get($colors, "bg")}-200);
                &:hover,
                &:active {
                  background-color: var(#{map.get($colors, "bg")}-200);
                  box-shadow: var(--x-shadow);
                }
              }

              @if $type == "warning" {
                background-color: var(#{map.get($colors, "bg")}-200);
                &:hover,
                &:active {
                  background-color: var(#{map.get($colors, "bg")}-200);
                  box-shadow: var(--x-shadow);
                }
              }

              @if $type == "error" {
                background-color: var(#{map.get($colors, "bg")}-200);
                &:hover,
                &:active {
                  background-color: var(#{map.get($colors, "bg")}-200);
                  box-shadow: var(--x-shadow);
                }
              }

              @if $type == "info" {
                background-color: var(#{map.get($colors, "bg")}-200);
                &:hover,
                &:active {
                  background-color: var(#{map.get($colors, "bg")}-200);
                  box-shadow: var(--x-shadow);
                }
              }
            }
          }

          @if $variant == "light" {
            background-color: var(#{map.get($colors, "bg")}-100);
            color: var(#{map.get($colors, "base")});
            border-color: transparent;
            box-shadow: var(--x-shadow-tiny);

            &:hover {
              background-color: transparent;
              box-shadow: var(--x-shadow);
            }

            &:active {
              background-color: var(#{map.get($colors, "bg")}-300);
              box-shadow: var(--x-shadow-none);
            }

            // 在每个变体中添加禁用状态的处理
            &.x-button--disabled,
            &.x-button--loading {
              background-color: var(#{map.get($colors, "bg")}-100);
              &:hover,
              &:active {
                background-color: var(#{map.get($colors, "bg")}-100);
                box-shadow: var(--x-shadow-tiny);
              }
            }
          }

          @if $variant == "outlined" {
            background-color: transparent;
            border: var(--x-border);
            border-color: var(#{map.get($colors, "base")});
            color: var(#{map.get($colors, "base")});
            box-shadow: var(--x-shadow-none);

            &:hover {
              background-color: var(#{map.get($colors, "bg")}-100);
              box-shadow: var(--x-shadow-tiny);
            }

            &:active {
              background-color: var(#{map.get($colors, "bg")}-300);
              box-shadow: var(--x-shadow-none);
            }

            // 在每个变体中添加禁用状态的处理
            &.x-button--disabled,
            &.x-button--loading {
              &:hover,
              &:active {
                background-color: transparent;
                box-shadow: var(--x-shadow-none);
              }
            }
          }

          @if $variant == "text" {
            background-color: transparent;
            color: var(#{map.get($colors, "base")});
            border-color: transparent;
            box-shadow: var(--x-shadow-none);

            &:hover {
              color: var(#{map.get($colors, "bg")}-400);
            }

            &:active {
              color: var(#{map.get($colors, "bg")}-600);
            }

            // 在每个变体中添加禁用状态的处理
            &.x-button--disabled,
            &.x-button--loading {
              &:hover,
              &:active {
                color: var(#{map.get($colors, "base")});
              }
            }
          }
        }
      }
    }
  }

  // 形状变体
  &.x-button--square {
    border-radius: var(--x-border-radius-none);
  }

  &.x-button--default {
    border-radius: var(--x-border-radius-base);
  }

  &.x-button--round {
    border-radius: var(--x-border-radius-round);
  }

  &.x-button--circle {
    border-radius: var(--x-border-radius-circle);
    width: 1em;
    height: 1em;
  }

  // flat 样式 - 移除阴影
  &.x-button--flat {
    box-shadow: var(--x-shadow-none);

    &:hover {
      box-shadow: var(--x-shadow-none);
    }
  }

  // 尺寸样式也可以循环生成
  @each $size, $config in $sizes {
    &.x-button--#{$size} {
      height: map.get($config, "height");
      padding: map.get($config, "padding");
      font-size: map.get($config, "fontSize");

      &.x-button--circle {
        width: map.get($config, "height");
        height: map.get($config, "height");
      }
    }
  }

  // 添加过渡效果
  transition: all 0.2s ease-in-out;
}
