@use "../functions/transform" as *;

// 阴影配置
$shadows: (
  "tiny": (
    "soft": (
      0 2px 4px
    ),
    "medium": (
      0 1px 2px
    ),
    "deep": (
      0 1px 1px
    )
  ),
  "normal": (
    "soft": (
      0 3px 6px -1px
    ),
    "medium": (
      0 2px 4px -1px
    ),
    "deep": (
      0 1px 3px 0
    )
  ),
  "large": (
    "soft": (
      0 8px 10px -5px
    ),
    "medium": (
      0 6px 8px -4px
    ),
    "deep": (
      0 4px 6px -2px
    )
  ),
  "huge": (
    "soft": (
      0 16px 24px -6px
    ),
    "medium": (
      0 12px 16px -4px
    ),
    "deep": (
      0 8px 12px -3px
    )
  )
);

$shadow-types: (
  "soft": 0.12,
  // 柔和阴影
  "medium": 0.14,
  // 中等阴影
  "deep": 0.18 // 深色阴影
);

:root {
  // 亮色模式阴影配置 - 使用 RGB 格式
  --x-shadow-color: #{hex-to-rgb(#000000)}; // 使用黑色作为基础阴影色
  --x-shadow-opacity-soft: 0.12;
  --x-shadow-opacity-medium: 0.14;
  --x-shadow-opacity-deep: 0.18;

  // 生成阴影变量
  @each $size, $config in $shadows {
    $result: ();

    // 柔和阴影
    $soft: map-get($config, "soft");
    $result: append(
      $result,
      #{$soft} rgba(var(--x-shadow-color), var(--x-shadow-opacity-soft)),
      comma
    );

    // 中等阴影
    $medium: map-get($config, "medium");
    $result: append(
      $result,
      #{$medium} rgba(var(--x-shadow-color), var(--x-shadow-opacity-medium)),
      comma
    );

    // 深色阴影
    $deep: map-get($config, "deep");
    $result: append(
      $result,
      #{$deep} rgba(var(--x-shadow-color), var(--x-shadow-opacity-deep)),
      comma
    );

    --x-shadow-#{$size}: #{$result};
  }

  // 默认阴影
  --x-shadow: var(--x-shadow-normal);
  --x-shadow-none: none;

  // 暗色模式
  &.dark {
    --x-shadow-color: #{hex-to-rgb(#000000)}; // 暗色模式下仍使用黑色，但透明度更高
    --x-shadow-opacity-soft: 0.24;
    --x-shadow-opacity-medium: 0.28;
    --x-shadow-opacity-deep: 0.32;
  }
}

// 使用示例的混入
@mixin with-shadow($size: "normal") {
  box-shadow: var(--x-shadow-#{$size});
}
