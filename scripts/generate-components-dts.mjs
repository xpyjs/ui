import fs from 'fs'
import path from "path";

const COMPONENTS_DIR = './packages/components'
const OUTPUT_FILE = './packages/components.d.ts'

function toPascalCase(str) {
  return str
    .split('-')
    .map(part => part.charAt(0).toUpperCase() + part.slice(1))
    .join('')
}

function generateComponentsDts() {
  // 读取 components 目录下的所有文件夹
  const components = fs
    .readdirSync(COMPONENTS_DIR, { withFileTypes: true })
    .filter(dirent => dirent.isDirectory() && fs.existsSync(path.resolve(COMPONENTS_DIR, dirent.name, "index.ts")))
    .map(dirent => ({
      name: `X${toPascalCase(dirent.name)}`,
      path: dirent.name
    }))

  // 生成声明文件内容
  const content = `// This file is generated by scripts/generate-components-dts.mjs
import "@vue/runtime-core"

declare module "@vue/runtime-core" {
  export interface GlobalComponents {
${components
      .map(
        component =>
          `    ${component.name}: typeof import("./components/${component.path}/index")["default"];`
      )
      .join('\n')}
  }
}
`

  // 写入文件
  fs.writeFileSync(OUTPUT_FILE, content, 'utf-8')
  console.log('\x1b[32m【BUILD】Generated components.d.ts successfully!\x1b[0m')
}

generateComponentsDts()